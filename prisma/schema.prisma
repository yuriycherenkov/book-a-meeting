// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields:[userId], references:[id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique@map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields:[userId], references:[id], onDelete: Cascade)
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  firstName String
  lastName  String
  password  String
  hash      String
  Meeting   Meeting[]
  accounts  Account[]
  sessions  Session[]
}

model Room {
  id          Int       @id @default(autoincrement())
  number      Int
  capacity    Int
  description String
  Meeting     Meeting[]
}

model Meeting {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  organizer   User     @relation(fields: [organizerId], references: [id])
  organizerId String
  room        Room     @relation(fields: [roomId], references: [id])
  roomId      Int
  createdAt   DateTime @default(now())
}

model Invitation {
  id        Int     @id @default(autoincrement())
  meetingId Int
  userId    Int
  status    InvitationStatus
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  REJECTED
}
